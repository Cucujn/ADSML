package VSCE.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Element;
  private ConceptPresentation props_Map;
  private ConceptPresentation props_Weather;
  private ConceptPresentation props_World;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Element:
        if (props_Element == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Element = cpb.create();
        }
        return props_Element;
      case LanguageConceptSwitch.Map:
        if (props_Map == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("map");
          props_Map = cpb.create();
        }
        return props_Map;
      case LanguageConceptSwitch.Weather:
        if (props_Weather == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("weather");
          props_Weather = cpb.create();
        }
        return props_Weather;
      case LanguageConceptSwitch.World:
        if (props_World == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_World = cpb.create();
        }
        return props_World;
    }
    return null;
  }
}
