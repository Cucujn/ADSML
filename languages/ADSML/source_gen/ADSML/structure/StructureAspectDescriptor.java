package ADSML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbsoluteLocation = createDescriptorForAbsoluteLocation();
  /*package*/ final ConceptDescriptor myConceptBike = createDescriptorForBike();
  /*package*/ final ConceptDescriptor myConceptCar = createDescriptorForCar();
  /*package*/ final ConceptDescriptor myConceptCenterLine = createDescriptorForCenterLine();
  /*package*/ final ConceptDescriptor myConceptContract = createDescriptorForContract();
  /*package*/ final ConceptDescriptor myConceptContractEvent = createDescriptorForContractEvent();
  /*package*/ final ConceptDescriptor myConceptContractList = createDescriptorForContractList();
  /*package*/ final ConceptDescriptor myConceptEntity = createDescriptorForEntity();
  /*package*/ final ConceptDescriptor myConceptIElement = createDescriptorForIElement();
  /*package*/ final ConceptDescriptor myConceptLocation = createDescriptorForLocation();
  /*package*/ final ConceptDescriptor myConceptMap = createDescriptorForMap();
  /*package*/ final ConceptDescriptor myConceptMotorBike = createDescriptorForMotorBike();
  /*package*/ final ConceptDescriptor myConceptPedestrian = createDescriptorForPedestrian();
  /*package*/ final ConceptDescriptor myConceptPoint = createDescriptorForPoint();
  /*package*/ final ConceptDescriptor myConceptRelativeLocation = createDescriptorForRelativeLocation();
  /*package*/ final ConceptDescriptor myConceptRoad = createDescriptorForRoad();
  /*package*/ final ConceptDescriptor myConceptRoadNetwork = createDescriptorForRoadNetwork();
  /*package*/ final ConceptDescriptor myConceptRule = createDescriptorForRule();
  /*package*/ final ConceptDescriptor myConceptScenario = createDescriptorForScenario();
  /*package*/ final ConceptDescriptor myConceptScenarioWithContract = createDescriptorForScenarioWithContract();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptTrafficLight = createDescriptorForTrafficLight();
  /*package*/ final ConceptDescriptor myConceptTrafficSign = createDescriptorForTrafficSign();
  /*package*/ final ConceptDescriptor myConceptVehicle = createDescriptorForVehicle();
  /*package*/ final ConceptDescriptor myConceptWeather = createDescriptorForWeather();
  /*package*/ final EnumerationDescriptor myEnumerationVehicleType = new EnumerationDescriptor_VehicleType();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
    deps.aggregatedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbsoluteLocation, myConceptBike, myConceptCar, myConceptCenterLine, myConceptContract, myConceptContractEvent, myConceptContractList, myConceptEntity, myConceptIElement, myConceptLocation, myConceptMap, myConceptMotorBike, myConceptPedestrian, myConceptPoint, myConceptRelativeLocation, myConceptRoad, myConceptRoadNetwork, myConceptRule, myConceptScenario, myConceptScenarioWithContract, myConceptStatement, myConceptTrafficLight, myConceptTrafficSign, myConceptVehicle, myConceptWeather);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AbsoluteLocation:
        return myConceptAbsoluteLocation;
      case LanguageConceptSwitch.Bike:
        return myConceptBike;
      case LanguageConceptSwitch.Car:
        return myConceptCar;
      case LanguageConceptSwitch.CenterLine:
        return myConceptCenterLine;
      case LanguageConceptSwitch.Contract:
        return myConceptContract;
      case LanguageConceptSwitch.ContractEvent:
        return myConceptContractEvent;
      case LanguageConceptSwitch.ContractList:
        return myConceptContractList;
      case LanguageConceptSwitch.Entity:
        return myConceptEntity;
      case LanguageConceptSwitch.IElement:
        return myConceptIElement;
      case LanguageConceptSwitch.Location:
        return myConceptLocation;
      case LanguageConceptSwitch.Map:
        return myConceptMap;
      case LanguageConceptSwitch.MotorBike:
        return myConceptMotorBike;
      case LanguageConceptSwitch.Pedestrian:
        return myConceptPedestrian;
      case LanguageConceptSwitch.Point:
        return myConceptPoint;
      case LanguageConceptSwitch.RelativeLocation:
        return myConceptRelativeLocation;
      case LanguageConceptSwitch.Road:
        return myConceptRoad;
      case LanguageConceptSwitch.RoadNetwork:
        return myConceptRoadNetwork;
      case LanguageConceptSwitch.Rule:
        return myConceptRule;
      case LanguageConceptSwitch.Scenario:
        return myConceptScenario;
      case LanguageConceptSwitch.ScenarioWithContract:
        return myConceptScenarioWithContract;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.TrafficLight:
        return myConceptTrafficLight;
      case LanguageConceptSwitch.TrafficSign:
        return myConceptTrafficSign;
      case LanguageConceptSwitch.Vehicle:
        return myConceptVehicle;
      case LanguageConceptSwitch.Weather:
        return myConceptWeather;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationVehicleType);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbsoluteLocation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "AbsoluteLocation", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0xe6ed7bbc3f3dde1L);
    b.class_(false, false, false);
    b.super_("ADSML.structure.Location", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0xe6ed7bbc3f3dddeL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/1040005765415558625");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBike() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Bike", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x698be8805526ef87L);
    b.class_(false, false, false);
    b.super_("ADSML.structure.Vehicle", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fefL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/7605428033627287431");
    b.version(2);
    b.alias("bike");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCar() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Car", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x698be8805526ef86L);
    b.class_(false, false, false);
    b.super_("ADSML.structure.Vehicle", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fefL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/7605428033627287430");
    b.version(2);
    b.alias("car");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCenterLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "CenterLine", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x698be8805519065fL);
    b.class_(false, false, false);
    b.parent(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x6de5a419ace0563cL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/7605428033626375775");
    b.version(2);
    b.aggregate("linePoints", 0x698be88055190662L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e37502aL).optional(false).ordered(true).multiple(true).origin("7605428033626375778").done();
    b.alias("center line");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContract() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Contract", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x45527978d0368583L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/4995188496503571843");
    b.version(2);
    b.associate("attachTo", 0x45527978d0368586L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fedL).optional(false).origin("4995188496503571846").done();
    b.aggregate("rules", 0x45527978d039195fL).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1fc6d9aefa8835f6L).optional(true).ordered(true).multiple(true).origin("4995188496503740767").done();
    b.aggregate("events", 0x1fc6d9aefa883666L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1fc6d9aefa88365eL).optional(true).ordered(true).multiple(true).origin("2289756806115243622").done();
    b.alias("contract");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContractEvent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "ContractEvent", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1fc6d9aefa88365eL);
    b.class_(false, false, false);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/2289756806115243614");
    b.version(2);
    b.aggregate("condition", 0x1d09add8e9fd0fdL).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d09add8e9d61ccL).optional(false).ordered(true).multiple(false).origin("130774665565032701").done();
    b.aggregate("action", 0x1d09add8e9fd0ffL).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d09add8e9d61ccL).optional(false).ordered(true).multiple(true).origin("130774665565032703").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContractList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "ContractList", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x45527978d036858eL);
    b.class_(false, false, false);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/4995188496503571854");
    b.version(2);
    b.aggregate("contracts", 0x45527978d036858fL).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x45527978d0368583L).optional(true).ordered(true).multiple(true).origin("4995188496503571855").done();
    b.alias("contract list");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEntity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Entity", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fedL);
    b.class_(false, true, false);
    b.parent(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x6de5a419ace0563cL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/2124032493294669805");
    b.version(2);
    b.aggregate("speed", 0x6de5a419acf79399L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("7918915949983929241").done();
    b.aggregate("acceleration", 0x29916b15ca62e258L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("2995292968512053848").done();
    b.aggregate("rotation", 0x6de5a419acf7939cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("7918915949983929244").done();
    b.aggregate("location", 0x6de5a419acf85908L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0xe6ed7bbc3f3dddeL).optional(false).ordered(true).multiple(false).origin("7918915949983979784").done();
    b.aggregate("goal", 0xab7ea0a06256bf1L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0xe6ed7bbc3f3dddeL).optional(true).ordered(true).multiple(false).origin("772343189891017713").done();
    b.alias("entity");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "IElement", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x6de5a419ace0563cL);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/7918915949982406204");
    b.version(2);
    b.property("key", 0x6de5a419ace0564dL).type(PrimitiveTypeId.STRING).origin("7918915949982406221").done();
    b.aggregate("value", 0x6de5a419ace05649L).target(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL).optional(true).ordered(true).multiple(true).origin("7918915949982406217").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Location", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0xe6ed7bbc3f3dddeL);
    b.class_(false, true, false);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/1040005765415558622");
    b.version(2);
    b.aggregate("x", 0xe6ed7bbc3f9f187L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("1040005765415956871").done();
    b.aggregate("y", 0xe6ed7bbc3f9f189L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("1040005765415956873").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMap() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Map", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x5e282050ec3bb548L);
    b.class_(false, false, false);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/6784708370566460744");
    b.version(2);
    b.property("importFrom", 0x5e282050ec3bb55aL).type(PrimitiveTypeId.STRING).origin("6784708370566460762").done();
    b.property("width", 0x19a19743bb3cf052L).type(PrimitiveTypeId.INTEGER).origin("1846923639358550098").done();
    b.property("height", 0x19a19743bb3cf059L).type(PrimitiveTypeId.INTEGER).origin("1846923639358550105").done();
    b.alias("map");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMotorBike() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "MotorBike", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x698be8805526ef88L);
    b.class_(false, false, false);
    b.super_("ADSML.structure.Vehicle", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fefL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/7605428033627287432");
    b.version(2);
    b.alias("motor bike");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPedestrian() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Pedestrian", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374ff0L);
    b.class_(false, false, false);
    b.super_("ADSML.structure.Entity", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fedL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/2124032493294669808");
    b.version(2);
    b.aggregate("x", 0x504561bab3c32f4bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("5784136750934994763").done();
    b.aggregate("y", 0x504561bab3c32f4fL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("5784136750934994767").done();
    b.alias("pedestrian");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPoint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Point", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e37502aL);
    b.class_(false, false, false);
    b.parent(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x6de5a419ace0563cL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/2124032493294669866");
    b.version(2);
    b.aggregate("x", 0x504561bab3c32e2eL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("5784136750934994478").done();
    b.aggregate("y", 0x504561bab3c32f5bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("5784136750934994779").done();
    b.alias("point");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRelativeLocation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "RelativeLocation", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0xe6ed7bbc3f1a366L);
    b.class_(false, false, false);
    b.super_("ADSML.structure.Location", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0xe6ed7bbc3f3dddeL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/1040005765415412582");
    b.version(2);
    b.associate("relativeTo", 0xe6ed7bbc40114f7L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fedL).optional(false).origin("1040005765416424695").done();
    b.aggregate("realLocation", 0xe6ed7bbc4115b87L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0xe6ed7bbc3f3dddeL).optional(true).ordered(true).multiple(false).origin("1040005765417491335").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoad() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Road", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374feeL);
    b.class_(false, false, false);
    b.parent(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x6de5a419ace0563cL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/2124032493294669806");
    b.version(2);
    b.aggregate("leftBoundary", 0x6de5a419acee0fb1L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e37502aL).optional(false).ordered(true).multiple(true).origin("7918915949983305649").done();
    b.aggregate("rightBoundary", 0x6a36e0966e96e18dL).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e37502aL).optional(false).ordered(true).multiple(true).origin("7653551553467834765").done();
    b.aggregate("centerLines", 0x698be88055190664L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x698be8805519065fL).optional(true).ordered(true).multiple(true).origin("7605428033626375780").done();
    b.alias("road");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoadNetwork() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "RoadNetwork", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x6de5a419acee7af6L);
    b.class_(false, false, false);
    b.parent(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x6de5a419ace0563cL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/7918915949983333110");
    b.version(2);
    b.aggregate("roads", 0x6de5a419acee7afdL).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374feeL).optional(true).ordered(true).multiple(true).origin("7918915949983333117").done();
    b.alias("road network");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Rule", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1fc6d9aefa8835f6L);
    b.class_(false, false, false);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/2289756806115243510");
    b.version(2);
    b.aggregate("predicate", 0x1d09add8e9fd0faL).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d09add8e9d61ccL).optional(false).ordered(true).multiple(true).origin("130774665565032698").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScenario() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Scenario", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fecL);
    b.class_(false, false, true);
    b.parent(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x6de5a419ace0563cL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/2124032493294669804");
    b.version(2);
    b.property("map", 0x49dc07817b75f0d4L).type(PrimitiveTypeId.STRING).origin("5322137112348586196").done();
    b.aggregate("map", 0x5e282050ec3bb55cL).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x5e282050ec3bb548L).optional(false).ordered(true).multiple(false).origin("6784708370566460764").done();
    b.aggregate("weather", 0x1d7a144c8e374ffeL).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374ff3L).optional(false).ordered(true).multiple(false).origin("2124032493294669822").done();
    b.aggregate("entities", 0x1d7a144c8e375001L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fedL).optional(true).ordered(true).multiple(true).origin("2124032493294669825").done();
    b.aggregate("roadNetwork", 0x6de5a419aceeb958L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x6de5a419acee7af6L).optional(false).ordered(true).multiple(false).origin("7918915949983349080").done();
    b.alias("scenario");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScenarioWithContract() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "ScenarioWithContract", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x45527978d0368588L);
    b.class_(false, false, true);
    b.parent(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x6de5a419ace0563cL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/4995188496503571848");
    b.version(2);
    b.aggregate("scenario", 0x45527978d0368589L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fecL).optional(false).ordered(true).multiple(false).origin("4995188496503571849").done();
    b.aggregate("contractList", 0x45527978d036858bL).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x45527978d036858eL).optional(false).ordered(true).multiple(false).origin("4995188496503571851").done();
    b.alias("scenario with contract");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Statement", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d09add8e9d61ccL);
    b.class_(false, false, false);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/130774665564873164");
    b.version(2);
    b.property("content", 0x1d09add8e9d61cdL).type(PrimitiveTypeId.STRING).origin("130774665564873165").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTrafficLight() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "TrafficLight", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x29916b15ca651778L);
    b.class_(false, false, false);
    b.super_("ADSML.structure.Entity", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fedL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/2995292968512198520");
    b.version(2);
    b.alias("traffic light");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTrafficSign() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "TrafficSign", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x29916b15ca651777L);
    b.class_(false, false, false);
    b.super_("ADSML.structure.Entity", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fedL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/2995292968512198519");
    b.version(2);
    b.alias("traffic sign");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVehicle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Vehicle", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fefL);
    b.class_(false, true, false);
    b.super_("ADSML.structure.Entity", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374fedL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/2124032493294669807");
    b.version(2);
    b.aggregate("Goal", 0xe6ed7bbc4115b85L).target(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0xe6ed7bbc3f3dddeL).optional(true).ordered(true).multiple(true).origin("1040005765417491333").done();
    b.alias("vehicle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWeather() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ADSML", "Weather", 0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x1d7a144c8e374ff3L);
    b.class_(false, false, false);
    b.parent(0x703f16c8997b4d66L, 0x9edc3367cac7e880L, 0x6de5a419ace0563cL);
    b.origin("r:9e49d978-2ed2-4aa6-ba31-2e403be30bdd(ADSML.structure)/2124032493294669811");
    b.version(2);
    b.aggregate("cloudiness", 0x5307d53206fe8e70L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("5982985040827420272").done();
    b.aggregate("precipitation", 0x5307d53206fe8e73L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("5982985040827420275").done();
    b.aggregate("precipitationDeposits", 0x5307d53206fe8e85L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("5982985040827420293").done();
    b.aggregate("windIntensity", 0x5307d53206fe8e8cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("5982985040827420300").done();
    b.aggregate("sunAzimuthAngle", 0x5307d53206fe8e95L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("5982985040827420309").done();
    b.aggregate("sunAltitudeAngle", 0x5307d53206fe8ea0L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L).optional(false).ordered(true).multiple(false).origin("5982985040827420320").done();
    b.alias("weather");
    return b.create();
  }
}
