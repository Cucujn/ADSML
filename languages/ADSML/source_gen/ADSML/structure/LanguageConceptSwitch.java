package ADSML.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbsoluteLocation = 0;
  public static final int Bike = 1;
  public static final int Car = 2;
  public static final int CenterLine = 3;
  public static final int Contract = 4;
  public static final int ContractEvent = 5;
  public static final int ContractList = 6;
  public static final int Entity = 7;
  public static final int IElement = 8;
  public static final int Location = 9;
  public static final int Map = 10;
  public static final int MotorBike = 11;
  public static final int Pedestrian = 12;
  public static final int Point = 13;
  public static final int RelativeLocation = 14;
  public static final int Road = 15;
  public static final int RoadNetwork = 16;
  public static final int Rule = 17;
  public static final int Scenario = 18;
  public static final int ScenarioWithContract = 19;
  public static final int Statement = 20;
  public static final int TrafficLight = 21;
  public static final int TrafficSign = 22;
  public static final int Vehicle = 23;
  public static final int Weather = 24;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x703f16c8997b4d66L, 0x9edc3367cac7e880L);
    builder.put(0xe6ed7bbc3f3dde1L, AbsoluteLocation);
    builder.put(0x698be8805526ef87L, Bike);
    builder.put(0x698be8805526ef86L, Car);
    builder.put(0x698be8805519065fL, CenterLine);
    builder.put(0x45527978d0368583L, Contract);
    builder.put(0x1fc6d9aefa88365eL, ContractEvent);
    builder.put(0x45527978d036858eL, ContractList);
    builder.put(0x1d7a144c8e374fedL, Entity);
    builder.put(0x6de5a419ace0563cL, IElement);
    builder.put(0xe6ed7bbc3f3dddeL, Location);
    builder.put(0x5e282050ec3bb548L, Map);
    builder.put(0x698be8805526ef88L, MotorBike);
    builder.put(0x1d7a144c8e374ff0L, Pedestrian);
    builder.put(0x1d7a144c8e37502aL, Point);
    builder.put(0xe6ed7bbc3f1a366L, RelativeLocation);
    builder.put(0x1d7a144c8e374feeL, Road);
    builder.put(0x6de5a419acee7af6L, RoadNetwork);
    builder.put(0x1fc6d9aefa8835f6L, Rule);
    builder.put(0x1d7a144c8e374fecL, Scenario);
    builder.put(0x45527978d0368588L, ScenarioWithContract);
    builder.put(0x1d09add8e9d61ccL, Statement);
    builder.put(0x29916b15ca651778L, TrafficLight);
    builder.put(0x29916b15ca651777L, TrafficSign);
    builder.put(0x1d7a144c8e374fefL, Vehicle);
    builder.put(0x1d7a144c8e374ff3L, Weather);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
